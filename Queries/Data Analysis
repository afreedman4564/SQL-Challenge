-- 1. List the following details of each employee: employee number, last name, first name, sex, and salary.
-- calculate employee count overall, by last_name, sex and emp_title
-- SELECT last_name, COUNT(emp_no)
-- FROM employees
-- GROUP BY last_name
-- ORDER BY COUNT(emp_no) DESC
-- ;

-- SELECT COUNT(emp_no)
-- FROM employees
-- ;

-- calculate total salary
-- SELECT SUM(salary)
-- FROM salaries
-- ;


-- CREATE TABLE emp_salary AS
SELECT e.emp_no,
e.last_name,
e.first_name,
e.sex,
s.salary
FROM employees as e
JOIN salaries as s
ON e.emp_no = s.emp_no
;

-- SELECT COUNT(emp_no)
-- FROM emp_view
-- ;

-- SELECT SUM(salary)
-- FROM emp_view
-- ;



-- 2. List first name, last name, and hire date for employees who were hired in 1986.	
		-- calculate count by hire year to validate analysis downstream
		-- SELECT COUNT(emp_no),
		-- extract(YEAR from hire_date) AS Year
		-- FROM employees
		-- GROUP BY Year
		-- ORDER BY Year
		-- ;

		-- Generate list of those hired in 1986
		SELECT emp_no,
		first_name AS First,
		last_name AS Last,
		hire_date,
		extract(YEAR from hire_date) AS Year
		FROM employees
		WHERE extract(YEAR from hire_date) = 1986
		;

		-- Test only 1986 hires appear
		-- SELECT extract(YEAR from hire_date) AS Year, COUNT(emp_no)
		-- FROM employees
		-- GROUP BY Year
		-- ;
	
-- 3. List the manager of each department with the following information: 
-- 		department number
--		department name
-- 		employee number
-- 		last name
--		first name

-- calculate the distribution by dept_no
-- SELECT dept_no, COUNT(emp_no)
-- FROM dept_manager
-- GROUP BY dept_no
-- ORDER BY dept_no
-- ;

-- CREATE VIEW dept_name_view AS
SELECT m.dept_no, d.dept_name, e.emp_no, e.last_name, e.first_name
FROM dept_manager AS m
JOIN departments AS d
ON (m.dept_no = d.dept_no)
	JOIN employees AS e
	ON (m.emp_no = e.emp_no)
;

-- SELECT dept_no, COUNT(emp_no)
-- FROM dept_name_view
-- GROUP BY dept_no
-- ORDER BY dept_no
-- ;

-- 4. List the department of each employee with the following information: employee number, last name, first name, and department name.
-- calculate distribution by dept
-- SELECT dept_no, COUNT(dept_no)
-- FROM dept_emp
-- GROUP BY dept_no
-- ORDER BY COUNT(dept_no) DESC
-- ;

-- DROP VIEW dept_emp_count;
-- CREATE VIEW dept_emp_count AS
SELECT e.emp_no AS "Employee Number",
e.last_name AS "Last Name",
e.first_name AS "First Name",
ds.dept_name AS "Department Name"
FROM employees AS e
JOIN dept_emp as d
ON (e.emp_no = d.emp_no)
	JOIN departments as ds
	ON (d.dept_no = ds.dept_no)
;

-- SELECT dept_name, COUNT(emp_no)
-- FROM dept_emp_count
-- GROUP BY dept_name
-- ORDER BY COUNT(emp_no) DESC
-- ;

-- 5. List first name, last name, and sex for employees whose first name is "Hercules" and last names begin with "B."

-- SELECT COUNT(emp_no)
-- FROM employees
-- WHERE first_name = 'Hercules'
-- ;

-- CREATE VIEW hercules AS
SELECT first_name, last_name, sex
FROM employees
WHERE first_name = 'Hercules' AND
	last_name LIKE 'B%'
;

-- SELECT COUNT(first_name)
-- FROM hercules
-- ;

-- 6. List all employees in the Sales department, including their employee number, last name, first name, and department name.
-- SELECT dept_no, COUNT(emp_no)
-- FROM dept_emp
-- GROUP BY dept_no
-- ORDER BY COUNT(emp_no) DESC
-- ;

-- CREATE VIEW sales_dept AS
SELECT e.emp_no, e.last_name, e.first_name, d.dept_name
FROM employees AS e
JOIN dept_emp as de
ON (e.emp_no = de.emp_no)
	JOIN departments AS d
	ON (de.dept_no = d.dept_no)
WHERE d.dept_name = 'Sales'
;

-- SELECT dept_name, COUNT(emp_no)
-- FROM sales_dept
-- GROUP BY dept_name
-- ORDER BY COUNT(emp_no) DESC
-- ;

-- 7. List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.

-- CREATE VIEW sales_dev_dept AS
SELECT e.emp_no, e.last_name, e.first_name, d.dept_name
FROM employees AS e
JOIN dept_emp as de
ON (e.emp_no = de.emp_no)
	JOIN departments AS d
	ON (de.dept_no = d.dept_no)
WHERE d.dept_name IN ('Sales', 'Development')
;

-- SELECT dept_name, COUNT(emp_no)
-- FROM sales_dev_dept
-- GROUP BY dept_name
-- ORDER BY COUNT(emp_no) DESC
-- ;

-- 8. In descending order, list the frequency count of employee last names, i.e., how many employees share each last name.
SELECT last_name, COUNT(last_name) AS "Last Name Number"
FROM employees
GROUP BY last_name
ORDER BY "Last Name Number" DESC
;

SELECT salary, count(1)
FROM salaries
GROUP BY salary
ORDER BY salary
;

-- BONUS. 
-- 1. Import the SQL database into Pandas.
-- 2. Create a histogram to visualize the most common salary ranges for employees.
-- o requires employees and salary data
-- 3. Create a bar chart of average salary by title.
-- o requires merging employee

-- Create table, merging employees, salary and titles on emp_no and title_id/emp_title_id respectively
-- Order by salary
DROP TABLE IF EXISTS salary_comb;
CREATE TABLE salary_comb AS
SELECT e.emp_no, e.emp_title_id, s.salary, t.title,
CASE WHEN s.salary = 40000 THEN '40000'
	WHEN s.salary BETWEEN 40001 AND 49999 THEN '40001 TO 49999'
	WHEN s.salary BETWEEN 50001 AND 59999 THEN '50001 TO 59999'
	WHEN s.salary BETWEEN 60001 AND 69999 THEN '60001 TO 69999'
	WHEN s.salary BETWEEN 70001 AND 79999 THEN '70001 TO 79999'
	WHEN s.salary BETWEEN 80001 AND 89999 THEN '80001 TO 89999'
	WHEN s.salary BETWEEN 90001 AND 99999 THEN '90001 TO 99999'
	WHEN s.salary BETWEEN 100001 AND 109999 THEN '100001 TO 109999'
	WHEN s.salary BETWEEN 110001 AND 119999 THEN '110001 TO 119999'
	WHEN s.salary >= 120001 THEN '120001+'
	END AS salary_cat
FROM employees AS e
JOIN salaries as s
ON (e.emp_no = s.emp_no)
	JOIN titles AS t
	ON (e.emp_title_id = t.title_id)
ORDER BY s.salary
;

